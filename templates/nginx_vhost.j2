# {{ ansible_managed }}

## Redirect all www traffic to the https://example.com version
server {
    listen       80;
    listen  [::]:80;
    listen       443 ssl http2;
    listen  [::]:443 ssl http2;
    server_name  www.{{ main_domain }};

    ssl_protocols TLSv1.2;
    ssl_prefer_server_ciphers on;
    ssl_ciphers "EECDH+ECDSA+AESGCM:EECDH+aRSA+AESGCM:EECDH+ECDSA+SHA256:EECDH+aRSA+SHA256:EECDH+ECDSA+SHA384:EECDH+ECDSA+SHA256:EECDH+aRSA+SHA384:EDH+aRSA+AESGCM:EDH+aRSA+SHA256:EDH+aRSA:EECDH:!aNULL:!eNULL:!MEDIUM:!LOW:!3DES:!MD5:!EXP:!PSK:!SRP:!DSS:!RC4:!SEED";

    add_header Strict-Transport-Security "max-age=31536000";

    ssl_certificate     /var/www/main/shared/ssl/fullchain.pem;
    ssl_certificate_key /var/www/main/shared/ssl/privkey.pem;

    location /.well-known {
        root /var/www/main/tmp/letsencrypt/;
        try_files $uri $uri/ =404;
    }


    location / {
        return       301 https://{{ main_domain }}$request_uri;
    }
}

server {
    listen 80;
    listen [::]:80;
    server_name {{ main_domain }};

    # Lets Encrypt home. Avoid it conflicting with the web-root
    # TODO: probably needs to fire on well-known/acme-challenge only,
    # because now it captures all .well-known urls, including things like
    # webfinger or other protocols
    location /.well-known {
        root /var/www/main/tmp/letsencrypt/;
        try_files $uri $uri/ =404;
    }

    ## All other requests are redirected to the https version.
    location / {
        return 301 https://{{ main_domain }}$request_uri;
    }
}

server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name {{ main_domain }};

    ssl_protocols TLSv1.2;
    ssl_prefer_server_ciphers on;
    ssl_ciphers "EECDH+ECDSA+AESGCM:EECDH+aRSA+AESGCM:EECDH+ECDSA+SHA256:EECDH+aRSA+SHA256:EECDH+ECDSA+SHA384:EECDH+ECDSA+SHA256:EECDH+aRSA+SHA384:EDH+aRSA+AESGCM:EDH+aRSA+SHA256:EDH+aRSA:EECDH:!aNULL:!eNULL:!MEDIUM:!LOW:!3DES:!MD5:!EXP:!PSK:!SRP:!DSS:!RC4:!SEED";

    add_header Strict-Transport-Security "max-age=31536000";

    ssl_certificate     /var/www/main/shared/ssl/fullchain.pem;
    ssl_certificate_key /var/www/main/shared/ssl/privkey.pem;

    location /munin/ {
      alias /var/cache/munin/www/;
      auth_basic "Munin Monitoring";
      auth_basic_user_file /etc/nginx/passwdfile;
    }

    location /munin/static/ {
      alias /etc/munin/static/;
      expires 31d;
      auth_basic "Munin Monitoring";
      auth_basic_user_file /etc/nginx/passwdfile;
    }

    location / {
      root /var/www/main/current/;
    }

    ssi on;
    index index.html index.htm;
    error_page 404 /static/404.html;
}
